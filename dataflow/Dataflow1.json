{
	"name": "Dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "az_blob_demo_faresdata",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AggPayMetTip",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          medallion as string,",
				"          hack_license as string,",
				"          vendor_id as string,",
				"          pickup_datetime as string,",
				"          payment_type as string,",
				"          fare_amount as string,",
				"          surcharge as string,",
				"          mta_tax as string,",
				"          tip_amount as string,",
				"          tolls_amount as string,",
				"          total_amount as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 aggregate(groupBy(payment_type),",
				"     {Total Tip} = sum(toInteger(tip_amount))) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          medallion as string,",
				"          hack_license as string,",
				"          vendor_id as string,",
				"          pickup_datetime as string,",
				"          payment_type as string,",
				"          fare_amount as string,",
				"          surcharge as string,",
				"          mta_tax as string,",
				"          tip_amount as string,",
				"          tolls_amount as string,",
				"          total_amount as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}